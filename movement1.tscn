[gd_scene load_steps=5 format=2]

[ext_resource path="res://Player/Idle/0Degrees/Frame0.png" type="Texture" id=1]
[ext_resource path="res://isometric_nature.tres" type="TileSet" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

const ACCELERATION = 500
const MAX_SPEED = 100
const FRICTION = 500

var velocity = Vector2.ZERO

#for when we animate the dude
# onready var animationPlayer = $AnimationPlayer
# onready Var animationTree = $AnitmationTree
# onready var animationState = animationTree.get(\"parameters/playback\") 


#conversion between coordinate systems
func cartesian_to_isometric(cartesian):
	return Vector2(cartesian.x - cartesian.y, (cartesian.x + cartesian.y) /2)

#func isometric_to_cartesian(iso):
#	var cart_pos = Vector2()
#	cart_pos.x = (iso.x + iso.y * 2)/2
#	cart_pos.y = iso.x + cart_pos.y
#	return cart_pos

# fun _ready():
#	animationTree.active = true

func _physics_process(delta):
	var input_vector = Vector2.ZERO
	input_vector.x = Input.get_action_strength(\"ui_right\") - Input.get_action_strength(\"ui_left\")
	input_vector.y = Input.get_action_strength(\"ui_down\") - Input.get_action_strength(\"ui_up\")
	input_vector = input_vector.normalized() * MAX_SPEED * delta
	input_vector = cartesian_to_isometric(input_vector)
	
	if input_vector != Vector2.ZERO:
#		will add stuff about animations later
		velocity = velocity.move_toward(input_vector * MAX_SPEED, ACCELERATION * delta)
	else:
		velocity = velocity.move_toward(Vector2.ZERO, FRICTION*delta)
		
	velocity = move_and_slide(velocity)
	

#	motion = isometric_to_cartesian(motion)

# Called when the node enters the scene tree for the first time.
#_fixed_process(true)


"

[sub_resource type="SpriteFrames" id=2]
animations = [ {
"frames": [  ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[node name="Node2D" type="Node2D"]

[node name="TileMap" type="TileMap" parent="."]
mode = 1
tile_set = ExtResource( 2 )
cell_size = Vector2( 128, 94 )
cell_y_sort = true
centered_textures = true
format = 1
tile_data = PoolIntArray( -589824, 8, 0, -589823, 8, 0, -589822, 8, 0, -589821, 8, 0, -589820, 8, 0, -589819, 8, 0, -589818, 8, 0, -589817, 8, 0, -589816, 8, 0, -589815, 8, 0, -589814, 8, 0, -589813, 8, 0, -589812, 8, 0, -589811, 8, 0, -589810, 8, 0, -524288, 8, 0, -524287, 8, 0, -524286, 8, 0, -524285, 8, 0, -524284, 8, 0, -524283, 8, 0, -524282, 8, 0, -524281, 8, 0, -524280, 6, 0, -524279, 12, 0, -524278, 8, 0, -524277, 8, 0, -524276, 8, 0, -524275, 8, 0, -524274, 8, 0, -458752, 8, 0, -458751, 8, 0, -458750, 8, 0, -458749, 8, 0, -458748, 8, 0, -458747, 8, 0, -458746, 8, 0, -458745, 8, 0, -458744, 8, 0, -458743, 12, 0, -458742, 12, 0, -458741, 12, 0, -458740, 8, 0, -458739, 8, 0, -458738, 8, 0, -393216, 8, 0, -393215, 8, 0, -393214, 8, 0, -393213, 8, 0, -393212, 8, 0, -393211, 6, 0, -393210, 8, 0, -393209, 8, 0, -393208, 8, 0, -393207, 12, 0, -393206, 8, 0, -393205, 12, 0, -393204, 8, 0, -393203, 8, 0, -393202, 8, 0, -327680, 8, 0, -327679, 8, 0, -327678, 8, 0, -327677, 8, 0, -327676, 6, 0, -327675, 6, 0, -327674, 8, 0, -327673, 8, 0, -327672, 8, 0, -327671, 12, 0, -327670, 8, 0, -327669, 8, 0, -327668, 8, 0, -327667, 8, 0, -327666, 8, 0, -262144, 8, 0, -262143, 8, 0, -262142, 8, 0, -262141, 6, 0, -262140, 6, 0, -262139, 8, 0, -262138, 8, 0, -262137, 8, 0, -262136, 12, 0, -262135, 8, 0, -262134, 8, 0, -262133, 8, 0, -262132, 8, 0, -262131, 8, 0, -262130, 8, 0, -196608, 8, 0, -196607, 8, 0, -196606, 6, 0, -196605, 6, 0, -196604, 6, 0, -196603, 8, 0, -196602, 8, 0, -196601, 8, 0, -196600, 8, 0, -196599, 8, 0, -196598, 8, 0, -196597, 8, 0, -196596, 8, 0, -196595, 8, 0, -196594, 8, 0, -131072, 8, 0, -131071, 8, 0, -131070, 6, 0, -131069, 8, 0, -131068, 8, 0, -131067, 8, 0, -131066, 8, 0, -131065, 8, 0, -131064, 8, 0, -131063, 8, 0, -131062, 8, 0, -131061, 8, 0, -131060, 8, 0, -131059, 8, 0, -131058, 8, 0, -65536, 8, 0, -65535, 6, 0, -65534, 6, 0, -65533, 8, 0, -65532, 8, 0, -65531, 8, 0, -65530, 8, 0, -65529, 9, 0, -65528, 9, 0, -65527, 9, 0, -65526, 8, 0, -65525, 8, 0, -65524, 8, 0, -65523, 8, 0, -65522, 8, 0, 0, 8, 0, 1, 6, 0, 2, 8, 0, 3, 8, 0, 4, 8, 0, 5, 8, 0, 6, 9, 0, 7, 9, 0, 8, 9, 0, 9, 9, 0, 10, 8, 0, 11, 8, 0, 12, 8, 0, 13, 8, 0, 14, 8, 0, 65536, 8, 0, 65537, 8, 0, 65538, 8, 0, 65539, 8, 0, 65540, 8, 0, 65541, 9, 0, 65542, 9, 0, 65543, 9, 0, 65544, 8, 0, 65545, 9, 0, 65546, 9, 0, 65547, 8, 0, 65548, 8, 0, 65549, 8, 0, 65550, 8, 0, 131072, 8, 0, 131073, 8, 0, 131074, 8, 0, 131075, 8, 0, 131076, 8, 0, 131077, 9, 0, 131078, 9, 0, 131079, 8, 0, 131080, 8, 0, 131081, 8, 0, 131082, 8, 0, 131083, 8, 0, 131084, 8, 0, 131085, 8, 0, 131086, 8, 0, 196608, 8, 0, 196609, 8, 0, 196610, 8, 0, 196611, 8, 0, 196612, 8, 0, 196613, 8, 0, 196614, 8, 0, 196615, 8, 0, 196616, 8, 0, 196617, 8, 0, 196618, 8, 0, 196619, 8, 0, 196620, 8, 0, 196621, 8, 0, 196622, 8, 0, 262144, 8, 0, 262145, 8, 0, 262146, 8, 0, 262147, 8, 0, 262148, 8, 0, 262149, 8, 0, 262150, 8, 0, 262151, 8, 0, 262152, 8, 0, 262153, 8, 0, 262154, 8, 0, 262155, 8, 0, 262156, 8, 0, 262157, 8, 0, 262158, 8, 0, 327680, 8, 0, 327681, 8, 0, 327682, 8, 0, 327683, 8, 0, 327684, 8, 0, 327685, 8, 0, 327686, 8, 0, 327687, 8, 0, 327688, 8, 0, 327689, 8, 0, 327690, 8, 0, 327691, 8, 0, 327692, 8, 0, 327693, 8, 0, 327694, 8, 0, 393216, 8, 0, 393217, 8, 0, 393218, 8, 0, 393219, 8, 0, 393220, 8, 0, 393221, 8, 0, 393222, 8, 0, 393223, 8, 0, 393224, 8, 0, 393225, 8, 0, 393226, 8, 0, 393227, 8, 0, 393228, 8, 0, 393229, 8, 0, 393230, 8, 0 )

[node name="KinematicBody2D" type="KinematicBody2D" parent="."]
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="KinematicBody2D"]
position = Vector2( 482, 189 )
texture = ExtResource( 1 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="KinematicBody2D/Sprite"]
frames = SubResource( 2 )
